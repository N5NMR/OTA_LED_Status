#include <ArduinoOTA.h>          // ğŸ‘‰ Bibliothek fÃ¼r Over-The-Air Updates (OTA)
#include "wifi_connect.h"        // ğŸ‘‰ Eigene WiFi-Verbindungs-Bibliothek (z.B. wifi_connect-Funktion)

// ğŸ“¶ WLAN-Zugangsdaten (hier freies WLAN ohne Passwort)
const char* ssid = "WIFI NAME";
const char* password = "PASSWORD";       // 

void setup() 
{
  Serial.begin(115200);          // ğŸ‘‰ Serielle Schnittstelle starten (fÃ¼r Debug-Ausgaben)
  delay(1000);                  // ğŸ‘‰ Kleiner Wartezeit-Puffer, damit alles stabil startet
  Serial.println("\n");               // ğŸ‘‰ Kleiner Wartezeit-Puffer, damit alles stabil startet
  Serial.print("Programmname: ");
  Serial.println(__FILE__);
  delay(200);
  
  wifi_connect(ssid, password);  // ğŸ‘‰ WLAN-Verbindung aufbauen (eigene Funktion aus wifi_connect.h)

  // ğŸ‘‰ OTA Update-Name setzen, damit man das GerÃ¤t im Netzwerk erkennen kann
  ArduinoOTA.setHostname("OTA_NAME");

  // ğŸ‘‰ OTA Passwort setzen, damit nur autorisierte GerÃ¤te Updates machen kÃ¶nnen
  ArduinoOTA.setPassword("Password");

  // ğŸ‘‰ OTA-Service starten (damit OTA-Updates empfangen werden kÃ¶nnen)
  ArduinoOTA.begin();
}

void loop() 
{
  ArduinoOTA.handle();           // ğŸ‘‰ OTA-Dienst Ã¼berwachen, damit Updates erkannt und verarbeitet werden
}
